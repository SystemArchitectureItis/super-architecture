// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SystemArchitecture.Database;

namespace SystemArchitecture.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200413153344_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SystemArchitecture.Models.Entities.Debt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("CreditorApproval")
                        .HasColumnType("boolean");

                    b.Property<long?>("CreditorId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DebtSize")
                        .HasColumnType("numeric");

                    b.Property<bool>("DebtorApproval")
                        .HasColumnType("boolean");

                    b.Property<long?>("DebtorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("DebtorId");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.Party", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Ref")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.Purchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CheckUrl")
                        .HasColumnType("text");

                    b.Property<long?>("CreditorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.UserDebtor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<string>("DebtRef")
                        .HasColumnType("text");

                    b.Property<decimal>("DebtSize")
                        .HasColumnType("numeric");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserDebtors");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.Debt", b =>
                {
                    b.HasOne("SystemArchitecture.Models.Entities.User", "Creditor")
                        .WithMany()
                        .HasForeignKey("CreditorId");

                    b.HasOne("SystemArchitecture.Models.Entities.User", "Debtor")
                        .WithMany()
                        .HasForeignKey("DebtorId");
                });

            modelBuilder.Entity("SystemArchitecture.Models.Entities.Purchase", b =>
                {
                    b.HasOne("SystemArchitecture.Models.Entities.User", "Creditor")
                        .WithMany()
                        .HasForeignKey("CreditorId");
                });
#pragma warning restore 612, 618
        }
    }
}
